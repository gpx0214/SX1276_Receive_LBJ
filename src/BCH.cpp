
#include "BCH.hpp"

extern "C" {

#define LEN(x)  (sizeof(x)/sizeof(x[0]))

static const uint32_t keywords[] = {
    0x7cd215d8, // SC head   2045056 2  //[9524
    0x7a89c197, // empty     2007664 0  //[.8 1
    0x4b5149f0, // 1234000 1 //96549
    0x4b515a86, // 1234000 3 //9654d
    0x4b5161cf, // 1234008 0 //96543
};

static const uint32_t keywords1[] = {
    0xdddddf97, // "-----"
};

static const uint32_t keywords5[] = {
    0xdddddf97, // "-----"

    0xa01766ff, // "20473" //G
    0xa0116630, // "20443" //D
    0xa011253b, // "20442" //D
    0xa0166405, // "20433" //C
    0xa016270e, // "20432" //C

    0xa016c4fc, // "204U1" //K
    0xa016a11b, // "204U2" //K
    0xa0564135, // "20531" //S
    0xa0514300, // "20541" //T
    0xa05126e7, // "20542" //T
    0xa052c21b, // "205*1" //Z
    0xa052a7fc, // "205*2" //Z

    0xa02021b0, // "20202"
    0xa0204457, // "20201"
    0xa02062bb, // "20203"
};

static const uint32_t keywords8_10[] = {
    0xa02021b0, // "20202"

    0x820201d8, // "02020"
    0xbe1fde8f, // b "ea9b9" "e3cfd" f 京广线 0001
    0xbaceec9d, 0xab1fde21, // b "ea9bb" "a6cfd" f 京沪线 0002
    0xbaceca71, 0xfb9fdda8, // b "ea9b9" "fecfd" f 京哈线 0007
    0xfa0207f0, // cfd "f2020" //线__
    0xddf28897, // "dd7a8" //客专
    0xdd800008, // "--000"
};

static const uint32_t keywords11_14[] = {
    0xdddddf97, // "-----"
    0xdd800008, // "--000"
};

static const uint32_t keywords2[] = {
    0x9ddd9f29, // " --- "
    0x99981ba8, // "   0 "
    0x999c1e93, // "   1 "
    0x999a1e5c, // "   2 "
    0x999e1b67, // "   3 "
    0x99991952, // "   4 "
    0x999d1c69, // "   5 "
    0x999b1ca6, // "   6 "
    0x999f199d, // "   7 "
    0x99989dbd, // "   8 "
    0x999c9886, // "   9 "
    0x99c01b4d, // "  10 "
    0x99c41e76, // "  11 "
    0x99c21eb9, // "  12 "
    0x99c61b82, // "  13 "
    0x99c119b7, // "  14 "
    0x99c51c8c, // "  15 "
    0x99c31c43, // "  16 "
    0x99c71978, // "  17 "
    0x99c09d58, // "  18 "
    0x99c49863, // "  19 "
    0x99a0197f, // "  20 "
    0x99a41c44, // "  21 "
    0x99a21c8b, // "  22 "
    0x99a619b0, // "  23 "
    0x99a11b85, // "  24 "
    0x99a51ebe, // "  25 "
    0x99a31e71, // "  26 "
    0x99a71b4a, // "  27 "
    0x99a09f6a, // "  28 "
    0x99a49a51, // "  29 "
    0x99e01aa3, // "  30 "
    0x99e41f98, // "  31 "
    0x99e21f57, // "  32 "
    0x99e61a6c, // "  33 "
    0x99e11859, // "  34 "
    0x99e51d62, // "  35 "
    0x99e31dad, // "  36 "
    0x99e71896, // "  37 "
    0x99e09cb6, // "  38 "
    0x99e4998d, // "  39 "
    0x99901f0e, // "  40 "
    0x99941a35, // "  41 "
    0x99921afa, // "  42 "
    0x99961fc1, // "  43 "
    0x99911df4, // "  44 "
    0x999518cf, // "  45 "
    0x99931800, // "  46 "
    0x99971d3b, // "  47 "
    0x9990991b, // "  48 "
    0x99949c20, // "  49 "
    0x99d01cd2, // "  50 "
    0x99d419e9, // "  51 "
    0x99d21926, // "  52 "
    0x99d61c1d, // "  53 "
    0x99d11e28, // "  54 "
    0x99d51b13, // "  55 "
    0x99d31bdc, // "  56 "
    0x99d71ee7, // "  57 "
    0x99d09ac7, // "  58 "
    0x99d49ffc, // "  59 "
    0x99b01ee0, // "  60 "
    0x99b41bdb, // "  61 "
    0x99b21b14, // "  62 "
    0x99b61e2f, // "  63 "
    0x99b11c1a, // "  64 "
    0x99b51921, // "  65 "
    0x99b319ee, // "  66 "
    0x99b71cd5, // "  67 "
    0x99b098f5, // "  68 "
    0x99b49dce, // "  69 "
    0x99f01d3c, // "  70 "
    0x99f41807, // "  71 "
    0x99f218c8, // "  72 "
    0x99f61df3, // "  73 "
    0x99f11fc6, // "  74 "
    0x99f51afd, // "  75 "
    0x99f31a32, // "  76 "
    0x99f71f09, // "  77 "
    0x99f09b29, // "  78 "
    0x99f49e12, // "  79 "
    0x99881c37, // "  80 "
    0x998c190c, // "  81 "
    0x998a19c3, // "  82 "
    0x998e1cf8, // "  83 "
    0x99891ecd, // "  84 "
    0x998d1bf6, // "  85 "
    0x998b1b39, // "  86 "
    0x998f1e02, // "  87 "
    0x99889a22, // "  88 "
    0x998c9f19, // "  89 "
    0x99c81feb, // "  90 "
    0x99cc1ad0, // "  91 "
    0x99ca1a1f, // "  92 "
    0x99ce1f24, // "  93 "
    0x99c91d11, // "  94 "
    0x99cd182a, // "  95 "
    0x99cb18e5, // "  96 "
    0x99cf1dde, // "  97 "
    0x99c899fe, // "  98 "
    0x99cc9cc5, // "  99 "
    0x98001e8a, // " 000 "
    0x98041bb1, // " 001 "
    0x98021b7e, // " 002 "
    0x98061e45, // " 003 "
    0x98011c70, // " 004 "
    0x9805194b, // " 005 "
    0x98031984, // " 006 "
    0x98071cbf, // " 007 "
    0x9800989f, // " 008 "
    0x98049da4, // " 009 "
    0x98401d56, // " 010 "
    0x9844186d, // " 011 "
    0x984218a2, // " 012 "
    0x98461d99, // " 013 "
    0x98411fac, // " 014 "
    0x98451a97, // " 015 "
    0x98431a58, // " 016 "
    0x98471f63, // " 017 "
    0x98409b43, // " 018 "
    0x98449e78, // " 019 "
    0x98201f64, // " 020 "
    0x98241a5f, // " 021 "
    0x98221a90, // " 022 "
    0x98261fab, // " 023 "
    0x98211d9e, // " 024 "
    0x982518a5, // " 025 "
    0x9823186a, // " 026 "
    0x98271d51, // " 027 "
    0x98209971, // " 028 "
    0x98249c4a, // " 029 "
    0x98601cb8, // " 030 "
    0x98641983, // " 031 "
    0x9862194c, // " 032 "
    0x98661c77, // " 033 "
    0x98611e42, // " 034 "
    0x98651b79, // " 035 "
    0x98631bb6, // " 036 "
    0x98671e8d, // " 037 "
    0x98609aad, // " 038 "
    0x98649f96, // " 039 "
    0x98101915, // " 040 "
    0x98141c2e, // " 041 "
    0x98121ce1, // " 042 "
    0x981619da, // " 043 "
    0x98111bef, // " 044 "
    0x98151ed4, // " 045 "
    0x98131e1b, // " 046 "
    0x98171b20, // " 047 "
    0x98109f00, // " 048 "
    0x98149a3b, // " 049 "
    0x98501ac9, // " 050 "
    0x98541ff2, // " 051 "
    0x98521f3d, // " 052 "
    0x98561a06, // " 053 "
    0x98511833, // " 054 "
    0x98551d08, // " 055 "
    0x98531dc7, // " 056 "
    0x985718fc, // " 057 "
    0x98509cdc, // " 058 "
    0x985499e7, // " 059 "
    0x983018fb, // " 060 "
    0x98341dc0, // " 061 "
    0x98321d0f, // " 062 "
    0x98361834, // " 063 "
    0x98311a01, // " 064 "
    0x98351f3a, // " 065 "
    0x98331ff5, // " 066 "
    0x98371ace, // " 067 "
    0x98309eee, // " 068 "
    0x98349bd5, // " 069 "
    0x98701b27, // " 070 "
    0x98741e1c, // " 071 "
    0x98721ed3, // " 072 "
    0x98761be8, // " 073 "
    0x987119dd, // " 074 "
    0x98751ce6, // " 075 "
    0x98731c29, // " 076 "
    0x98771912, // " 077 "
    0x98709d32, // " 078 "
    0x98749809, // " 079 "
    0x98081a2c, // " 080 "
    0x980c1f17, // " 081 "
    0x980a1fd8, // " 082 "
    0x980e1ae3, // " 083 "
    0x980918d6, // " 084 "
    0x980d1ded, // " 085 "
    0x980b1d22, // " 086 "
    0x980f1819, // " 087 "
    0x98089c39, // " 088 "
    0x980c9902, // " 089 "
    0x984819f0, // " 090 "
    0x984c1ccb, // " 091 "
    0x984a1c04, // " 092 "
    0x984e193f, // " 093 "
    0x98491b0a, // " 094 "
    0x984d1e31, // " 095 "
    0x984b1efe, // " 096 "
    0x984f1bc5, // " 097 "
    0x98489fe5, // " 098 "
    0x984c9ade, // " 099 "
    0x9c001803, // " 100 "
    0x9c041d38, // " 101 "
    0x9c021df7, // " 102 "
    0x9c0618cc, // " 103 "
    0x9c011af9, // " 104 "
    0x9c051fc2, // " 105 "
    0x9c031f0d, // " 106 "
    0x9c071a36, // " 107 "
    0x9c009e16, // " 108 "
    0x9c049b2d, // " 109 "
    0x9c401bdf, // " 110 "
    0x9c441ee4, // " 111 "
    0x9c421e2b, // " 112 "
    0x9c461b10, // " 113 "
    0x9c411925, // " 114 "
    0x9c451c1e, // " 115 "
    0x9c431cd1, // " 116 "
    0x9c4719ea, // " 117 "
    0x9c409dca, // " 118 "
    0x9c4498f1, // " 119 "
    0x9c2019ed, // " 120 "
    0x9c241cd6, // " 121 "
    0x9c221c19, // " 122 "
    0x9c261922, // " 123 "
    0x9c211b17, // " 124 "
    0x9c251e2c, // " 125 "
    0x9c231ee3, // " 126 "
    0x9c271bd8, // " 127 "
    0x9c209ff8, // " 128 "
    0x9c249ac3, // " 129 "
    0x9c601a31, // " 130 "
    0x9c641f0a, // " 131 "
    0x9c621fc5, // " 132 "
    0x9c661afe, // " 133 "
    0x9c6118cb, // " 134 "
    0x9c651df0, // " 135 "
    0x9c631d3f, // " 136 "
    0x9c671804, // " 137 "
    0x9c609c24, // " 138 "
    0x9c64991f, // " 139 "
    0x9c101f9c, // " 140 "
    0x9c141aa7, // " 141 "
    0x9c121a68, // " 142 "
    0x9c161f53, // " 143 "
    0x9c111d66, // " 144 "
    0x9c15185d, // " 145 "
    0x9c131892, // " 146 "
    0x9c171da9, // " 147 "
    0x9c109989, // " 148 "
    0x9c149cb2, // " 149 "
    0x9c501c40, // " 150 "
    0x9c54197b, // " 151 "
    0x9c5219b4, // " 152 "
    0x9c561c8f, // " 153 "
    0x9c511eba, // " 154 "
    0x9c551b81, // " 155 "
    0x9c531b4e, // " 156 "
    0x9c571e75, // " 157 "
    0x9c509a55, // " 158 "
    0x9c549f6e, // " 159 "
    0x9c301e72, // " 160 "
    0x9c341b49, // " 161 "
    0x9c321b86, // " 162 "
    0x9c361ebd, // " 163 "
    0x9c311c88, // " 164 "
    0x9c3519b3, // " 165 "
    0x9c33197c, // " 166 "
    0x9c371c47, // " 167 "
    0x9c309867, // " 168 "
    0x9c349d5c, // " 169 "
    0x9c701dae, // " 170 "
    0x9c741895, // " 171 "
    0x9c72185a, // " 172 "
    0x9c761d61, // " 173 "
    0x9c711f54, // " 174 "
    0x9c751a6f, // " 175 "
    0x9c731aa0, // " 176 "
    0x9c771f9b, // " 177 "
    0x9c709bbb, // " 178 "
    0x9c749e80, // " 179 "
    0x9c081ca5, // " 180 "
    0x9c0c199e, // " 181 "
    0x9c0a1951, // " 182 "
    0x9c0e1c6a, // " 183 "
    0x9c091e5f, // " 184 "
    0x9c0d1b64, // " 185 "
    0x9c0b1bab, // " 186 "
    0x9c0f1e90, // " 187 "
    0x9c089ab0, // " 188 "
    0x9c0c9f8b, // " 189 "
    0x9c481f79, // " 190 "
    0x9c4c1a42, // " 191 "
    0x9c4a1a8d, // " 192 "
    0x9c4e1fb6, // " 193 "
    0x9c491d83, // " 194 "
    0x9c4d18b8, // " 195 "
    0x9c4b1877, // " 196 "
    0x9c4f1d4c, // " 197 "
    0x9c48996c, // " 198 "
    0x9c4c9c57, // " 199 "
    0x9a001dcf, // " 200 "
    0x9a0418f4, // " 201 "
    0x9a02183b, // " 202 "
    0x9a061d00, // " 203 "
    0x9a011f35, // " 204 "
    0x9a051a0e, // " 205 "
    0x9a031ac1, // " 206 "
    0x9a071ffa, // " 207 "
    0x9a009bda, // " 208 "
    0x9a049ee1, // " 209 "
    0x9a401e13, // " 210 "
    0x9a441b28, // " 211 "
    0x9a421be7, // " 212 "
    0x9a461edc, // " 213 "
    0x9a411ce9, // " 214 "
    0x9a4519d2, // " 215 "
    0x9a43191d, // " 216 "
    0x9a471c26, // " 217 "
    0x9a409806, // " 218 "
    0x9a449d3d, // " 219 "
    0x9a201c21, // " 220 "
    0x9a24191a, // " 221 "
    0x9a2219d5, // " 222 "
    0x9a261cee, // " 223 "
    0x9a211edb, // " 224 "
    0x9a251be0, // " 225 "
    0x9a231b2f, // " 226 "
    0x9a271e14, // " 227 "
    0x9a209a34, // " 228 "
    0x9a249f0f, // " 229 "
    0x9a601ffd, // " 230 "
    0x9a641ac6, // " 231 "
    0x9a621a09, // " 232 "
    0x9a661f32, // " 233 "
    0x9a611d07, // " 234 "
    0x9a65183c, // " 235 "
    0x9a6318f3, // " 236 "
    0x9a671dc8, // " 237 "
    0x9a6099e8, // " 238 "
    0x9a649cd3, // " 239 "
    0x9a101a50, // " 240 "
    0x9a141f6b, // " 241 "
    0x9a121fa4, // " 242 "
    0x9a161a9f, // " 243 "
    0x9a1118aa, // " 244 "
    0x9a151d91, // " 245 "
    0x9a131d5e, // " 246 "
    0x9a171865, // " 247 "
    0x9a109c45, // " 248 "
    0x9a14997e, // " 249 "
    0x9a50198c, // " 250 "
    0x9a541cb7, // " 251 "
    0x9a521c78, // " 252 "
    0x9a561943, // " 253 "
    0x9a511b76, // " 254 "
    0x9a551e4d, // " 255 "
    0x9a531e82, // " 256 "
    0x9a571bb9, // " 257 "
    0x9a509f99, // " 258 "
    0x9a549aa2, // " 259 "
    0x9a301bbe, // " 260 "
    0x9a341e85, // " 261 "
    0x9a321e4a, // " 262 "
    0x9a361b71, // " 263 "
    0x9a311944, // " 264 "
    0x9a351c7f, // " 265 "
    0x9a331cb0, // " 266 "
    0x9a37198b, // " 267 "
    0x9a309dab, // " 268 "
    0x9a349890, // " 269 "
    0x9a701862, // " 270 "
    0x9a741d59, // " 271 "
    0x9a721d96, // " 272 "
    0x9a7618ad, // " 273 "
    0x9a711a98, // " 274 "
    0x9a751fa3, // " 275 "
    0x9a731f6c, // " 276 "
    0x9a771a57, // " 277 "
    0x9a709e77, // " 278 "
    0x9a749b4c, // " 279 "
    0x9a081969, // " 280 "
    0x9a0c1c52, // " 281 "
    0x9a0a1c9d, // " 282 "
    0x9a0e19a6, // " 283 "
    0x9a091b93, // " 284 "
    0x9a0d1ea8, // " 285 "
    0x9a0b1e67, // " 286 "
    0x9a0f1b5c, // " 287 "
    0x9a089f7c, // " 288 "
    0x9a0c9a47, // " 289 "
    0x9a481ab5, // " 290 "
    0x9a4c1f8e, // " 291 "
    0x9a4a1f41, // " 292 "
    0x9a4e1a7a, // " 293 "
    0x9a49184f, // " 294 "
    0x9a4d1d74, // " 295 "
    0x9a4b1dbb, // " 296 "
    0x9a4f1880, // " 297 "
    0x9a489ca0, // " 298 "
    0x9a4c999b, // " 299 "
    0x9e001b46, // " 300 "
    0x9e041e7d, // " 301 "
    0x9e021eb2, // " 302 "
    0x9e061b89, // " 303 "
    0x9e0119bc, // " 304 "
    0x9e051c87, // " 305 "
    0x9e031c48, // " 306 "
    0x9e071973, // " 307 "
    0x9e009d53, // " 308 "
    0x9e049868, // " 309 "
    0x9e40189a, // " 310 "
    0x9e441da1, // " 311 "
    0x9e421d6e, // " 312 "
    0x9e461855, // " 313 "
    0x9e411a60, // " 314 "
    0x9e451f5b, // " 315 "
    0x9e431f94, // " 316 "
    0x9e471aaf, // " 317 "
    0x9e409e8f, // " 318 "
    0x9e449bb4, // " 319 "
    0x9e201aa8, // " 320 "
    0x9e241f93, // " 321 "
    0x9e221f5c, // " 322 "
    0x9e261a67, // " 323 "
    0x9e211852, // " 324 "
    0x9e251d69, // " 325 "
    0x9e231da6, // " 326 "
    0x9e27189d, // " 327 "
    0x9e209cbd, // " 328 "
    0x9e249986, // " 329 "
    0x9e601974, // " 330 "
    0x9e641c4f, // " 331 "
    0x9e621c80, // " 332 "
    0x9e6619bb, // " 333 "
    0x9e611b8e, // " 334 "
    0x9e651eb5, // " 335 "
    0x9e631e7a, // " 336 "
    0x9e671b41, // " 337 "
    0x9e609f61, // " 338 "
    0x9e649a5a, // " 339 "
    0x9e101cd9, // " 340 "
    0x9e1419e2, // " 341 "
    0x9e12192d, // " 342 "
    0x9e161c16, // " 343 "
    0x9e111e23, // " 344 "
    0x9e151b18, // " 345 "
    0x9e131bd7, // " 346 "
    0x9e171eec, // " 347 "
    0x9e109acc, // " 348 "
    0x9e149ff7, // " 349 "
    0x9e501f05, // " 350 "
    0x9e541a3e, // " 351 "
    0x9e521af1, // " 352 "
    0x9e561fca, // " 353 "
    0x9e511dff, // " 354 "
    0x9e5518c4, // " 355 "
    0x9e53180b, // " 356 "
    0x9e571d30, // " 357 "
    0x9e509910, // " 358 "
    0x9e549c2b, // " 359 "
};

// bch_err_map
/*
H = {P|I} H*Ct = 0
1001010010011110101011000000000
1101111011010001111110100000000
1111101111110110010100010000000
0111110111111011001010001000000
1010101001100011001110000100000
1100000110101111001100000010000
0110000011010111100110000001000
1010010011110101011000000000100
0101001001111010101100000000010
0010100100111101010110000000001
*/
static const uint32_t h[10] = {
    0x4a4f5600,
    0x6f68fd00,
    0x7dfb2880,
    0x3efd9440,
    0x55319c20,
    0x60d79810,
    0x306bcc08,
    0x527ab004,
    0x293d5802,
    0x149eac01,
};

static uint32_t bch_err_map[1024] = {0};

uint32_t even_parity(uint32_t m) {
    uint32_t x = m;
    x ^= x >> 16;
    x ^= x >> 8;
    x ^= x >> 4;
    x &= 0xf;
    return (0x6996 >> x) & 1;
}

int32_t bin_cnt(uint32_t m) {
    int ret = 0;
    uint32_t x = m;
    while (x) {
        x &= x - 1;
        ret += 1;
    }
    return ret;
}

// in  31 bits
// out 10 bits
uint32_t bch_ebin(uint32_t m) {
    uint32_t ebin = 0;
    int32_t ii = 0;
    for (ii = 0; ii < 10; ii++) {
        int bit = even_parity(h[ii] & m);
        // printf("%d", bit);
        ebin <<= 1;
        ebin |= bit;
    }
    return ebin;
}

uint32_t bch_forceword(uint32_t &m, uint8_t ebit, uint32_t word_idx, const uint32_t* keywords, int32_t len) {
    uint32_t origin_bin = m;
    for (int32_t i = 0; i < len; i++) {
        uint32_t keyword = keywords[i];
        int distance = bin_cnt(origin_bin ^ keyword);
        if (0 < distance && distance <= 6 && distance < ebit) {
            m = keyword;
            ebit = distance;
        }
    }
    return ebit;
}

uint32_t bch_correct(uint32_t &m, const uint32_t origin_bin, uint32_t word_idx) {
    m = origin_bin;
    uint32_t ebin = bch_ebin(origin_bin >> 1);
    m ^= bch_err_map[ebin] << 1;
    // m ^= even_parity(m);

    int32_t ebit = bin_cnt(bch_err_map[ebin]);
    if (ebin && !bch_err_map[ebin]) ebit = 7;
    ebit += even_parity(m);
    if (ebit <= 2) return ebit;

    ebit = bch_forceword(m, ebit, word_idx, keywords, LEN(keywords));
    switch (word_idx) {
        case 1: case 3:
            ebit = bch_forceword(m, 7, word_idx, keywords1, LEN(keywords1));
            break;
        case 2:
            ebit = bch_forceword(m, ebit, word_idx, keywords2, LEN(keywords2));
            break;
        case 5:
            ebit = bch_forceword(m, ebit, word_idx, keywords5, LEN(keywords5));
            break;
        case 7: case 8: case 9: case 10:
            ebit = bch_forceword(m, 7, word_idx, keywords8_10, LEN(keywords8_10));
            break;
        case 11: case 12: case 13: case 14:
            ebit = bch_forceword(m, 7, word_idx, keywords11_14, LEN(keywords11_14));
        default:
            break;
    }

    return ebit;
}

void bch_err_map_init(void) {
    // uint32_t bch_err_map[1024] = {0};
    int32_t i=0;
    int32_t j=0;

    for (i = 0; i < 31; i++) {
        bch_err_map[bch_ebin(1 << i)] = (1 << i);
    }

    for (i = 0; i < 31; i++) {
        for (j = 0; j < 31; j++) {
            bch_err_map[bch_ebin(1 << i | 1 << j)] = (1 << i | 1 << j);
        }
    }

}

// end bch_err_map

}
